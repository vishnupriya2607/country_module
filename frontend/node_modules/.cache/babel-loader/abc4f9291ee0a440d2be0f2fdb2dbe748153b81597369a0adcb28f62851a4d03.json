{"ast":null,"code":"// api.js (frontend)\n\nconst baseUrl = 'http://localhost:5000/api'; // Replace with your backend API URL\n\nexport const getCountries = async () => {\n  const response = await fetch(`${baseUrl}/countries`);\n  return response.json();\n};\nexport const getStates = async countryId => {\n  const response = await fetch(`${baseUrl}/states?countryId=${countryId}`);\n  return response.json();\n};\nexport const getCities = async stateId => {\n  const response = await fetch(`${baseUrl}/cities?stateId=${stateId}`);\n  return response.json();\n};\nexport const addCountry = async name => {\n  const response = await fetch(`${baseUrl}/countries`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name\n    })\n  });\n  return response.json();\n};\nexport const updateCountry = async (id, name) => {\n  const response = await fetch(`${baseUrl}/countries/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name\n    })\n  });\n  return response.json();\n};\nexport const deleteCountry = async id => {\n  const response = await fetch(`${baseUrl}/countries/${id}`, {\n    method: 'DELETE'\n  });\n  return response.json();\n};\nexport const addState = async (name, countryId) => {\n  const response = await fetch(`${baseUrl}/states`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      countryId\n    })\n  });\n  return response.json();\n};\nexport const updateState = async (id, name, countryId) => {\n  const response = await fetch(`${baseUrl}/states/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      countryId\n    })\n  });\n  return response.json();\n};\nexport const deleteState = async id => {\n  const response = await fetch(`${baseUrl}/states/${id}`, {\n    method: 'DELETE'\n  });\n  return response.json();\n};\nexport const addCity = async (name, stateId) => {\n  const response = await fetch(`${baseUrl}/cities`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      stateId\n    })\n  });\n  return response.json();\n};\nexport const updateCity = async (id, name, stateId) => {\n  const response = await fetch(`${baseUrl}/cities/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      stateId\n    })\n  });\n  return response.json();\n};\nexport const deleteCity = async id => {\n  const response = await fetch(`${baseUrl}/cities/${id}`, {\n    method: 'DELETE'\n  });\n  return response.json();\n};","map":{"version":3,"names":["baseUrl","getCountries","response","fetch","json","getStates","countryId","getCities","stateId","addCountry","name","method","headers","body","JSON","stringify","updateCountry","id","deleteCountry","addState","updateState","deleteState","addCity","updateCity","deleteCity"],"sources":["C:/Users/Vishnu Priya/OneDrive/Desktop/food/frontend/src/api.js"],"sourcesContent":["// api.js (frontend)\r\n\r\nconst baseUrl = 'http://localhost:5000/api'; // Replace with your backend API URL\r\n\r\nexport const getCountries = async () => {\r\n  const response = await fetch(`${baseUrl}/countries`);\r\n  return response.json();\r\n};\r\n\r\nexport const getStates = async (countryId) => {\r\n  const response = await fetch(`${baseUrl}/states?countryId=${countryId}`);\r\n  return response.json();\r\n};\r\n\r\nexport const getCities = async (stateId) => {\r\n  const response = await fetch(`${baseUrl}/cities?stateId=${stateId}`);\r\n  return response.json();\r\n};\r\n\r\nexport const addCountry = async (name) => {\r\n  const response = await fetch(`${baseUrl}/countries`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name }),\r\n  });\r\n  return response.json();\r\n};\r\n\r\nexport const updateCountry = async (id, name) => {\r\n  const response = await fetch(`${baseUrl}/countries/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name }),\r\n  });\r\n  return response.json();\r\n};\r\n\r\nexport const deleteCountry = async (id) => {\r\n  const response = await fetch(`${baseUrl}/countries/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return response.json();\r\n};\r\n\r\nexport const addState = async (name, countryId) => {\r\n  const response = await fetch(`${baseUrl}/states`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name, countryId }),\r\n  });\r\n  return response.json();\r\n};\r\n\r\nexport const updateState = async (id, name, countryId) => {\r\n  const response = await fetch(`${baseUrl}/states/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name, countryId }),\r\n  });\r\n  return response.json();\r\n};\r\n\r\nexport const deleteState = async (id) => {\r\n  const response = await fetch(`${baseUrl}/states/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return response.json();\r\n};\r\n\r\nexport const addCity = async (name, stateId) => {\r\n  const response = await fetch(`${baseUrl}/cities`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name, stateId }),\r\n  });\r\n  return response.json();\r\n};\r\n\r\nexport const updateCity = async (id, name, stateId) => {\r\n  const response = await fetch(`${baseUrl}/cities/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name, stateId }),\r\n  });\r\n  return response.json();\r\n};\r\n\r\nexport const deleteCity = async (id) => {\r\n  const response = await fetch(`${baseUrl}/cities/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return response.json();\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}