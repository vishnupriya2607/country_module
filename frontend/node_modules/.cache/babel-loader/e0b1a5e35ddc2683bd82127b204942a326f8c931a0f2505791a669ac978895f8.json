{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vishnu Priya\\\\OneDrive\\\\Desktop\\\\food\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport Country from './components/Country';\nimport State from './components/State';\nimport City from './components/City';\nimport UserPage from './components/UserPage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [view, setView] = useState('countries');\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Country State City Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setView('countries'),\n          children: \"Countries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setView('states'),\n          children: \"States\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setView('cities'),\n          children: \"Cities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/user\",\n          children: \"User Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [view === 'countries' && /*#__PURE__*/_jsxDEV(Country, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 40\n            }, this), view === 'states' && /*#__PURE__*/_jsxDEV(State, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 37\n            }, this), view === 'cities' && /*#__PURE__*/_jsxDEV(City, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user\",\n          element: /*#__PURE__*/_jsxDEV(UserPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"PIL7POBJdJ7HgK8pKrK46v8O4rM=\");\n_c = App;\nexport default App;\nrouter.get('/', async (req, res) => {\n  try {\n    const countries = await db.collection('countries').find().toArray();\n    res.json(countries);\n  } catch (error) {\n    res.status(500).json({\n      error: 'Failed to fetch countries'\n    });\n  }\n});\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Link","Country","State","City","UserPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","view","setView","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","path","element","_c","router","get","req","res","countries","db","collection","find","toArray","json","error","status","$RefreshReg$"],"sources":["C:/Users/Vishnu Priya/OneDrive/Desktop/food/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\r\nimport Country from './components/Country';\r\nimport State from './components/State';\r\nimport City from './components/City';\r\nimport UserPage from './components/UserPage';\r\n\r\nconst App = () => {\r\n  const [view, setView] = useState('countries');\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <h1>Country State City Management</h1>\r\n        <div>\r\n          <button onClick={() => setView('countries')}>Countries</button>\r\n          <button onClick={() => setView('states')}>States</button>\r\n          <button onClick={() => setView('cities')}>Cities</button>\r\n          <Link to=\"/user\">User Page</Link>\r\n        </div>\r\n        <Routes>\r\n          <Route path=\"/\" element={\r\n            <>\r\n              {view === 'countries' && <Country />}\r\n              {view === 'states' && <State />}\r\n              {view === 'cities' && <City />}\r\n            </>\r\n          } />\r\n          <Route path=\"/user\" element={<UserPage />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\nrouter.get('/', async (req, res) => {\r\n    try {\r\n      const countries = await db.collection('countries').find().toArray();\r\n      res.json(countries);\r\n    } catch (error) {\r\n      res.status(500).json({ error: 'Failed to fetch countries' });\r\n    }\r\n  });"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}