{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vishnu Priya\\\\OneDrive\\\\Desktop\\\\food\\\\frontend\\\\src\\\\components\\\\UserPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getCountries, getStatesByCountryId, getCitiesByStateId } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPage = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [states, setStates] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedState, setSelectedState] = useState('');\n  useEffect(() => {\n    const fetchCountries = async () => {\n      const countries = await getCountries();\n      setCountries(countries);\n    };\n    fetchCountries();\n  }, []);\n  useEffect(() => {\n    if (selectedCountry) {\n      const fetchStates = async () => {\n        const states = await getStatesByCountryId(selectedCountry);\n        setStates(states);\n        setCities([]);\n      };\n      fetchStates();\n    }\n  }, [selectedCountry]);\n  useEffect(() => {\n    if (selectedState) {\n      const fetchCities = async () => {\n        const cities = await getCitiesByStateId(selectedState);\n        setCities(cities);\n      };\n      fetchCities();\n    }\n  }, [selectedState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Country: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCountry,\n        onChange: e => setSelectedCountry(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country._id,\n          children: country.name\n        }, country._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"State: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedState,\n        onChange: e => setSelectedState(e.target.value),\n        disabled: !selectedCountry,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), states.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: state._id,\n          children: state.name\n        }, state._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"City: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        disabled: !selectedState,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city._id,\n          children: city.name\n        }, city._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPage, \"j3B+/Jpru67NVbjuxZDddghQZPQ=\");\n_c = UserPage;\nexport default UserPage;\nvar _c;\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useEffect","useState","getCountries","getStatesByCountryId","getCitiesByStateId","jsxDEV","_jsxDEV","UserPage","_s","countries","setCountries","states","setStates","cities","setCities","selectedCountry","setSelectedCountry","selectedState","setSelectedState","fetchCountries","fetchStates","fetchCities","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","country","_id","name","disabled","state","city","_c","$RefreshReg$"],"sources":["C:/Users/Vishnu Priya/OneDrive/Desktop/food/frontend/src/components/UserPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getCountries, getStatesByCountryId, getCitiesByStateId } from '../api';\r\n\r\nconst UserPage = () => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  const [selectedCountry, setSelectedCountry] = useState('');\r\n  const [selectedState, setSelectedState] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      const countries = await getCountries();\r\n      setCountries(countries);\r\n    };\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCountry) {\r\n      const fetchStates = async () => {\r\n        const states = await getStatesByCountryId(selectedCountry);\r\n        setStates(states);\r\n        setCities([]);\r\n      };\r\n      fetchStates();\r\n    }\r\n  }, [selectedCountry]);\r\n\r\n  useEffect(() => {\r\n    if (selectedState) {\r\n      const fetchCities = async () => {\r\n        const cities = await getCitiesByStateId(selectedState);\r\n        setCities(cities);\r\n      };\r\n      fetchCities();\r\n    }\r\n  }, [selectedState]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>User Page</h1>\r\n      <div>\r\n        <label>Country: </label>\r\n        <select\r\n          value={selectedCountry}\r\n          onChange={(e) => setSelectedCountry(e.target.value)}\r\n        >\r\n          <option value=\"\">Select Country</option>\r\n          {countries.map((country) => (\r\n            <option key={country._id} value={country._id}>\r\n              {country.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label>State: </label>\r\n        <select\r\n          value={selectedState}\r\n          onChange={(e) => setSelectedState(e.target.value)}\r\n          disabled={!selectedCountry}\r\n        >\r\n          <option value=\"\">Select State</option>\r\n          {states.map((state) => (\r\n            <option key={state._id} value={state._id}>\r\n              {state.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label>City: </label>\r\n        <select disabled={!selectedState}>\r\n          <option value=\"\">Select City</option>\r\n          {cities.map((city) => (\r\n            <option key={city._id} value={city._id}>\r\n              {city.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}