{"ast":null,"code":"// api.js (frontend)\n\nconst baseUrl = 'http://localhost:5000/api/'; // Replace with your backend API URL\n\nexport const getCountries = async () => {\n  const response = await fetch(`${baseUrl}/countries`);\n  return response.json();\n};\nexport const addCountry = async name => {\n  const response = await fetch(`${baseUrl}/countries`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name\n    })\n  });\n  return response.json();\n};\nexport const updateCountry = async (id, name) => {\n  const response = await fetch(`${baseUrl}/countries/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name\n    })\n  });\n  return response.json();\n};\nexport const deleteCountry = async id => {\n  const response = await fetch(`${baseUrl}/countries/${id}`, {\n    method: 'DELETE'\n  });\n  return response.json();\n};\n// api.js (frontend)\n\nexport const getStates = async () => {\n  const response = await fetch(`${baseUrl}/states`);\n  return response.json();\n};\nexport const addState = async (name, countryId) => {\n  const response = await fetch(`${baseUrl}/states`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      countryId\n    })\n  });\n  return response.json();\n};\nexport const updateState = async (id, name, countryId) => {\n  const response = await fetch(`${baseUrl}/states/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      countryId\n    })\n  });\n  return response.json();\n};\nexport const deleteState = async id => {\n  const response = await fetch(`${baseUrl}/states/${id}`, {\n    method: 'DELETE'\n  });\n  return response.json();\n};\nexport const getCities = async () => {\n  const response = await fetch(`${baseUrl}/cities`);\n  return response.json();\n};\nexport const addCity = async (name, stateId) => {\n  const response = await fetch(`${baseUrl}/cities`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      stateId\n    })\n  });\n  return response.json();\n};\nexport const updateCity = async (id, name, stateId) => {\n  const response = await fetch(`${baseUrl}/cities/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      stateId\n    })\n  });\n  return response.json();\n};\nexport const deleteCity = async id => {\n  const response = await fetch(`${baseUrl}/cities/${id}`, {\n    method: 'DELETE'\n  });\n  return response.json();\n};","map":{"version":3,"names":["baseUrl","getCountries","response","fetch","json","addCountry","name","method","headers","body","JSON","stringify","updateCountry","id","deleteCountry","getStates","addState","countryId","updateState","deleteState","getCities","addCity","stateId","updateCity","deleteCity"],"sources":["C:/Users/Vishnu Priya/OneDrive/Desktop/food/frontend/src/api.js"],"sourcesContent":["// api.js (frontend)\r\n\r\nconst baseUrl = 'http://localhost:5000/api/'; // Replace with your backend API URL\r\n\r\nexport const getCountries = async () => {\r\n  const response = await fetch(`${baseUrl}/countries`);\r\n  return response.json();\r\n};\r\n\r\nexport const addCountry = async (name) => {\r\n  const response = await fetch(`${baseUrl}/countries`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name }),\r\n  });\r\n  return response.json();\r\n};\r\n\r\nexport const updateCountry = async (id, name) => {\r\n  const response = await fetch(`${baseUrl}/countries/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name }),\r\n  });\r\n  return response.json();\r\n};\r\n\r\nexport const deleteCountry = async (id) => {\r\n  const response = await fetch(`${baseUrl}/countries/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return response.json();\r\n};\r\n// api.js (frontend)\r\n\r\nexport const getStates = async () => {\r\n  const response = await fetch(`${baseUrl}/states`);\r\n  return response.json();\r\n};\r\n\r\nexport const addState = async (name, countryId) => {\r\n  const response = await fetch(`${baseUrl}/states`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name, countryId }),\r\n  });\r\n  return response.json();\r\n};\r\n\r\nexport const updateState = async (id, name, countryId) => {\r\n  const response = await fetch(`${baseUrl}/states/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name, countryId }),\r\n  });\r\n  return response.json();\r\n};\r\n\r\nexport const deleteState = async (id) => {\r\n  const response = await fetch(`${baseUrl}/states/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return response.json();\r\n};\r\n\r\nexport const getCities = async () => {\r\n  const response = await fetch(`${baseUrl}/cities`);\r\n  return response.json();\r\n};\r\n\r\nexport const addCity = async (name, stateId) => {\r\n  const response = await fetch(`${baseUrl}/cities`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name, stateId }),\r\n  });\r\n  return response.json();\r\n};\r\n\r\nexport const updateCity = async (id, name, stateId) => {\r\n  const response = await fetch(`${baseUrl}/cities/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name, stateId }),\r\n  });\r\n  return response.json();\r\n};\r\n\r\nexport const deleteCity = async (id) => {\r\n  const response = await fetch(`${baseUrl}/cities/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return response.json();\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}