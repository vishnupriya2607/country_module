{"ast":null,"code":"const baseUrl = 'http://localhost:5000/api'; // Replace with your backend API URL\nconst handleResponse = async response => {\n  if (!response.ok) {\n    const errorText = await response.text();\n    throw new Error(`HTTP error! Status: ${response.status}, Response: ${errorText}`);\n  }\n  return response.json();\n};\n\n// Country API calls\nexport const getCountries = async () => {\n  const response = await fetch(`${baseUrl}/countries`);\n  return handleResponse(response);\n};\nexport const getStatesByCountryId = async countryId => {\n  const response = await fetch(`${baseUrl}/states/${countryId}`);\n  return handleResponse(response);\n};\nexport const getCitiesByStateId = async stateId => {\n  const response = await fetch(`${baseUrl}/cities/${stateId}`);\n  return handleResponse(response);\n};\nexport const addCountry = async name => {\n  const response = await fetch(`${baseUrl}/countries`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name\n    })\n  });\n  return handleResponse(response);\n};\nexport const updateCountry = async (id, name) => {\n  const response = await fetch(`${baseUrl}/countries/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name\n    })\n  });\n  return handleResponse(response);\n};\nexport const deleteCountry = async id => {\n  const response = await fetch(`${baseUrl}/countries/${id}`, {\n    method: 'DELETE'\n  });\n  return handleResponse(response);\n};\n\n// State API calls\nexport const getStates = async () => {\n  const response = await fetch(`${baseUrl}/states`);\n  return handleResponse(response);\n};\nexport const addState = async (name, countryId) => {\n  const response = await fetch(`${baseUrl}/states`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      countryId\n    })\n  });\n  return handleResponse(response);\n};\nexport const updateState = async (id, name, countryId) => {\n  const response = await fetch(`${baseUrl}/states/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      countryId\n    })\n  });\n  return handleResponse(response);\n};\nexport const deleteState = async id => {\n  const response = await fetch(`${baseUrl}/states/${id}`, {\n    method: 'DELETE'\n  });\n  return handleResponse(response);\n};\n\n// City API calls\nexport const getCities = async () => {\n  const response = await fetch(`${baseUrl}/cities`);\n  return handleResponse(response);\n};\nexport const addCity = async (name, stateId) => {\n  const response = await fetch(`${baseUrl}/cities`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      stateId\n    })\n  });\n  return handleResponse(response);\n};\nexport const updateCity = async (id, name, stateId) => {\n  const response = await fetch(`${baseUrl}/cities/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      stateId\n    })\n  });\n  return handleResponse(response);\n};\nexport const deleteCity = async id => {\n  const response = await fetch(`${baseUrl}/cities/${id}`, {\n    method: 'DELETE'\n  });\n  return handleResponse(response);\n};","map":{"version":3,"names":["baseUrl","handleResponse","response","ok","errorText","text","Error","status","json","getCountries","fetch","getStatesByCountryId","countryId","getCitiesByStateId","stateId","addCountry","name","method","headers","body","JSON","stringify","updateCountry","id","deleteCountry","getStates","addState","updateState","deleteState","getCities","addCity","updateCity","deleteCity"],"sources":["C:/Users/Vishnu Priya/OneDrive/Desktop/food/frontend/src/api.js"],"sourcesContent":["const baseUrl = 'http://localhost:5000/api'; // Replace with your backend API URL\r\nconst handleResponse = async (response) => {\r\n  if (!response.ok) {\r\n    const errorText = await response.text();\r\n    throw new Error(`HTTP error! Status: ${response.status}, Response: ${errorText}`);\r\n  }\r\n  return response.json();\r\n};\r\n\r\n// Country API calls\r\nexport const getCountries = async () => {\r\n  const response = await fetch(`${baseUrl}/countries`);\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const getStatesByCountryId = async (countryId) => {\r\n  const response = await fetch(`${baseUrl}/states/${countryId}`);\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const getCitiesByStateId = async (stateId) => {\r\n  const response = await fetch(`${baseUrl}/cities/${stateId}`);\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const addCountry = async (name) => {\r\n  const response = await fetch(`${baseUrl}/countries`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name }),\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const updateCountry = async (id, name) => {\r\n  const response = await fetch(`${baseUrl}/countries/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name }),\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const deleteCountry = async (id) => {\r\n  const response = await fetch(`${baseUrl}/countries/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\n// State API calls\r\nexport const getStates = async () => {\r\n  const response = await fetch(`${baseUrl}/states`);\r\n  return handleResponse(response);\r\n};\r\n\r\n\r\n\r\nexport const addState = async (name, countryId) => {\r\n  const response = await fetch(`${baseUrl}/states`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name, countryId }),\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const updateState = async (id, name, countryId) => {\r\n  const response = await fetch(`${baseUrl}/states/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name, countryId }),\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const deleteState = async (id) => {\r\n  const response = await fetch(`${baseUrl}/states/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\n// City API calls\r\nexport const getCities = async () => {\r\n  const response = await fetch(`${baseUrl}/cities`);\r\n  return handleResponse(response);\r\n};\r\n\r\n\r\nexport const addCity = async (name, stateId) => {\r\n  const response = await fetch(`${baseUrl}/cities`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name, stateId }),\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const updateCity = async (id, name, stateId) => {\r\n  const response = await fetch(`${baseUrl}/cities/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name, stateId }),\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const deleteCity = async (id) => {\r\n  const response = await fetch(`${baseUrl}/cities/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return handleResponse(response);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}