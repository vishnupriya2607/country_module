{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vishnu Priya\\\\OneDrive\\\\Desktop\\\\food\\\\frontend\\\\src\\\\components\\\\UserPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getCountries, getStatesByCountryId, getCitiesByStateId } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPage = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [states, setStates] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedState, setSelectedState] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        const countries = await getCountries();\n        setCountries(countries);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchCountries();\n  }, []);\n  useEffect(() => {\n    if (selectedCountry) {\n      const fetchStates = async () => {\n        try {\n          const states = await getStatesByCountryId(selectedCountry);\n          setStates(states);\n          setCities([]);\n        } catch (error) {\n          console.error('Error fetching states:', error);\n          setError(error.message);\n        }\n      };\n      fetchStates();\n    }\n  }, [selectedCountry]);\n  useEffect(() => {\n    if (selectedState) {\n      const fetchCities = async () => {\n        try {\n          const cities = await getCitiesByStateId(selectedState);\n          setCities(cities);\n        } catch (error) {\n          console.error('Error fetching cities:', error);\n          setError(error.message);\n        }\n      };\n      fetchCities();\n    }\n  }, [selectedState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Country: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCountry,\n        onChange: e => setSelectedCountry(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country._id,\n          children: country.name\n        }, country._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"State: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedState,\n        onChange: e => setSelectedState(e.target.value),\n        disabled: !selectedCountry,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), states.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: state._id,\n          children: state.name\n        }, state._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"City: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        disabled: !selectedState,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city._id,\n          children: city.name\n        }, city._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPage, \"FWjH1XRxvn14aOr6995yuFrWaXA=\");\n_c = UserPage;\nexport default UserPage;\nvar _c;\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useEffect","useState","getCountries","getStatesByCountryId","getCitiesByStateId","jsxDEV","_jsxDEV","UserPage","_s","countries","setCountries","states","setStates","cities","setCities","selectedCountry","setSelectedCountry","selectedState","setSelectedState","error","setError","fetchCountries","message","fetchStates","console","fetchCities","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","value","onChange","e","target","map","country","_id","name","disabled","state","city","_c","$RefreshReg$"],"sources":["C:/Users/Vishnu Priya/OneDrive/Desktop/food/frontend/src/components/UserPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getCountries, getStatesByCountryId, getCitiesByStateId } from '../api';\r\n\r\nconst UserPage = () => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  const [selectedCountry, setSelectedCountry] = useState('');\r\n  const [selectedState, setSelectedState] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      try {\r\n        const countries = await getCountries();\r\n        setCountries(countries);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n    };\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCountry) {\r\n      const fetchStates = async () => {\r\n        try {\r\n          const states = await getStatesByCountryId(selectedCountry);\r\n          setStates(states);\r\n          setCities([]);\r\n        } catch (error) {\r\n          console.error('Error fetching states:', error);\r\n          setError(error.message);\r\n        }\r\n      };\r\n      fetchStates();\r\n    }\r\n  }, [selectedCountry]);\r\n\r\n  useEffect(() => {\r\n    if (selectedState) {\r\n      const fetchCities = async () => {\r\n        try {\r\n          const cities = await getCitiesByStateId(selectedState);\r\n          setCities(cities);\r\n        } catch (error) {\r\n          console.error('Error fetching cities:', error);\r\n          setError(error.message);\r\n        }\r\n      };\r\n      fetchCities();\r\n    }\r\n  }, [selectedState]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>User Page</h1>\r\n      {error && <div style={{ color: 'red' }}>Error: {error}</div>}\r\n      <div>\r\n        <label>Country: </label>\r\n        <select\r\n          value={selectedCountry}\r\n          onChange={(e) => setSelectedCountry(e.target.value)}\r\n        >\r\n          <option value=\"\">Select Country</option>\r\n          {countries.map((country) => (\r\n            <option key={country._id} value={country._id}>\r\n              {country.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label>State: </label>\r\n        <select\r\n          value={selectedState}\r\n          onChange={(e) => setSelectedState(e.target.value)}\r\n          disabled={!selectedCountry}\r\n        >\r\n          <option value=\"\">Select State</option>\r\n          {states.map((state) => (\r\n            <option key={state._id} value={state._id}>\r\n              {state.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label>City: </label>\r\n        <select disabled={!selectedState}>\r\n          <option value=\"\">Select City</option>\r\n          {cities.map((city) => (\r\n            <option key={city._id} value={city._id}>\r\n              {city.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}