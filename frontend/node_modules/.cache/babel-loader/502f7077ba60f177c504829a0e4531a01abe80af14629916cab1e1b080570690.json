{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vishnu Priya\\\\OneDrive\\\\Desktop\\\\food\\\\frontend\\\\src\\\\components\\\\UserPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPage = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [states, setStates] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedState, setSelectedState] = useState('');\n  useEffect(() => {\n    // Fetch countries from the API\n    fetch('/api/countries').then(response => response.json()).then(data => setCountries(data));\n  }, []);\n  useEffect(() => {\n    if (selectedCountry) {\n      // Fetch states based on selected country\n      fetch(`/api/states?country=${selectedCountry}`).then(response => response.json()).then(data => setStates(data));\n    }\n  }, [selectedCountry]);\n  useEffect(() => {\n    if (selectedState) {\n      // Fetch cities based on selected state\n      fetch(`/api/cities?state=${selectedState}`).then(response => response.json()).then(data => setCities(data));\n    }\n  }, [selectedState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Country:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCountry,\n          onChange: e => setSelectedCountry(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: country.id,\n            children: country.name\n          }, country.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"State:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedState,\n          onChange: e => setSelectedState(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), states.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: state.id,\n            children: state.name\n          }, state.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"City:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: cities,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: city.id,\n            children: city.name\n          }, city.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPage, \"j3B+/Jpru67NVbjuxZDddghQZPQ=\");\n_c = UserPage;\nexport default UserPage;\nvar _c;\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserPage","_s","countries","setCountries","states","setStates","cities","setCities","selectedCountry","setSelectedCountry","selectedState","setSelectedState","fetch","then","response","json","data","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","country","id","name","state","city","_c","$RefreshReg$"],"sources":["C:/Users/Vishnu Priya/OneDrive/Desktop/food/frontend/src/components/UserPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst UserPage = () => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  const [selectedCountry, setSelectedCountry] = useState('');\r\n  const [selectedState, setSelectedState] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch countries from the API\r\n    fetch('/api/countries')\r\n      .then(response => response.json())\r\n      .then(data => setCountries(data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCountry) {\r\n      // Fetch states based on selected country\r\n      fetch(`/api/states?country=${selectedCountry}`)\r\n        .then(response => response.json())\r\n        .then(data => setStates(data));\r\n    }\r\n  }, [selectedCountry]);\r\n\r\n  useEffect(() => {\r\n    if (selectedState) {\r\n      // Fetch cities based on selected state\r\n      fetch(`/api/cities?state=${selectedState}`)\r\n        .then(response => response.json())\r\n        .then(data => setCities(data));\r\n    }\r\n  }, [selectedState]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>User Page</h2>\r\n      <div>\r\n        <label>\r\n          Country:\r\n          <select value={selectedCountry} onChange={(e) => setSelectedCountry(e.target.value)}>\r\n            <option value=\"\">Select Country</option>\r\n            {countries.map(country => (\r\n              <option key={country.id} value={country.id}>{country.name}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          State:\r\n          <select value={selectedState} onChange={(e) => setSelectedState(e.target.value)}>\r\n            <option value=\"\">Select State</option>\r\n            {states.map(state => (\r\n              <option key={state.id} value={state.id}>{state.name}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          City:\r\n          <select value={cities}>\r\n            <option value=\"\">Select City</option>\r\n            {cities.map(city => (\r\n              <option key={city.id} value={city.id}>{city.name}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}