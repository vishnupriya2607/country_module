{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vishnu Priya\\\\OneDrive\\\\Desktop\\\\food\\\\frontend\\\\src\\\\components\\\\Country.js\",\n  _s = $RefreshSig$();\n// Country.js (example)\n\nimport React, { useState, useEffect } from 'react';\nimport { getCountries, addCountry, updateCountry, deleteCountry } from '../api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Country = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [newCountryName, setNewCountryName] = useState('');\n  const [editCountryId, setEditCountryId] = useState(null);\n  const [editCountryName, setEditCountryName] = useState('');\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        const data = await getCountries();\n        setCountries(data);\n      } catch (error) {\n        console.error('Error fetching countries:', error);\n      }\n    };\n    fetchCountries();\n  }, []);\n  const handleAddCountry = async e => {\n    e.preventDefault();\n    try {\n      const newCountry = await addCountry(newCountryName);\n      setCountries([...countries, newCountry]);\n      setNewCountryName('');\n    } catch (error) {\n      console.error('Error adding country:', error);\n    }\n  };\n  const handleUpdateCountry = async id => {\n    try {\n      const updatedCountry = await updateCountry(id, editCountryName);\n      setCountries(countries.map(country => country._id === id ? updatedCountry : country));\n      setEditCountryId(null);\n      setEditCountryName('');\n    } catch (error) {\n      console.error('Error updating country:', error);\n    }\n  };\n  const handleDeleteCountry = async id => {\n    try {\n      await deleteCountry(id);\n      setCountries(countries.filter(country => country._id !== id));\n    } catch (error) {\n      console.error('Error deleting country:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Countries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddCountry,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newCountryName,\n        onChange: e => setNewCountryName(e.target.value),\n        placeholder: \"Add new country\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: countries.map(country => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: editCountryId === country._id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editCountryName,\n            onChange: e => setEditCountryName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdateCountry(country._id),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditCountryId(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [country.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditCountryId(country._id);\n              setEditCountryName(country.name);\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteCountry(country._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, country._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Country, \"k7bF9zTDeFmOzhxQAz9lR8Zitik=\");\n_c = Country;\nexport default Country;\nvar _c;\n$RefreshReg$(_c, \"Country\");","map":{"version":3,"names":["React","useState","useEffect","getCountries","addCountry","updateCountry","deleteCountry","jsxDEV","_jsxDEV","Fragment","_Fragment","Country","_s","countries","setCountries","newCountryName","setNewCountryName","editCountryId","setEditCountryId","editCountryName","setEditCountryName","fetchCountries","data","error","console","handleAddCountry","e","preventDefault","newCountry","handleUpdateCountry","id","updatedCountry","map","country","_id","handleDeleteCountry","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","onClick","name","_c","$RefreshReg$"],"sources":["C:/Users/Vishnu Priya/OneDrive/Desktop/food/frontend/src/components/Country.js"],"sourcesContent":["// Country.js (example)\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getCountries, addCountry, updateCountry, deleteCountry } from '../api';\r\n\r\nconst Country = () => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [newCountryName, setNewCountryName] = useState('');\r\n  const [editCountryId, setEditCountryId] = useState(null);\r\n  const [editCountryName, setEditCountryName] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      try {\r\n        const data = await getCountries();\r\n        setCountries(data);\r\n      } catch (error) {\r\n        console.error('Error fetching countries:', error);\r\n      }\r\n    };\r\n\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  const handleAddCountry = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newCountry = await addCountry(newCountryName);\r\n      setCountries([...countries, newCountry]);\r\n      setNewCountryName('');\r\n    } catch (error) {\r\n      console.error('Error adding country:', error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateCountry = async (id) => {\r\n    try {\r\n      const updatedCountry = await updateCountry(id, editCountryName);\r\n      setCountries(countries.map(country => (country._id === id ? updatedCountry : country)));\r\n      setEditCountryId(null);\r\n      setEditCountryName('');\r\n    } catch (error) {\r\n      console.error('Error updating country:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCountry = async (id) => {\r\n    try {\r\n      await deleteCountry(id);\r\n      setCountries(countries.filter(country => country._id !== id));\r\n    } catch (error) {\r\n      console.error('Error deleting country:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Countries</h2>\r\n      <form onSubmit={handleAddCountry}>\r\n        <input\r\n          type=\"text\"\r\n          value={newCountryName}\r\n          onChange={(e) => setNewCountryName(e.target.value)}\r\n          placeholder=\"Add new country\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Add Country</button>\r\n      </form>\r\n      <ul>\r\n        {countries.map(country => (\r\n          <li key={country._id}>\r\n            {editCountryId === country._id ? (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  value={editCountryName}\r\n                  onChange={(e) => setEditCountryName(e.target.value)}\r\n                />\r\n                <button onClick={() => handleUpdateCountry(country._id)}>Save</button>\r\n                <button onClick={() => setEditCountryId(null)}>Cancel</button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {country.name}\r\n                <button onClick={() => {\r\n                  setEditCountryId(country._id);\r\n                  setEditCountryName(country.name);\r\n                }}>Edit</button>\r\n                <button onClick={() => handleDeleteCountry(country._id)}>Delete</button>\r\n              </>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}